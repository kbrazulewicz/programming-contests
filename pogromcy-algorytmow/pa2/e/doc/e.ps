%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: e.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica-Bold Times-Bold Times-Italic Times-Roman
%%+ Symbol Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips e.dvi -o e.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.04.11:0935
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (e.dvi)
@start /Fa 202[42 1[42 42 42 42 48[{
.85 ExtendFont TeXBase1Encoding ReEncodeFont}5 83.022
/Courier rf
%DVIPSBitmapFont: Fb cmsy10 10 2
/Fb 2 21 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D<EF0180EF07C0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0
ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FC
EA3FF0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE9038
00FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0F
F8EE03FE933800FF80EF3FC0170FEF038094C7FCAE007FB81280B912C0A26C1780324479
B441>20 D E
%EndDVIPSBitmapFont
/Fc 75[40 57[53 60 5[47 53 3[66 2[66 40 33 3[53 66 53
1[60 6[80 2[120 6[73 72[33 7[{TeXBase1Encoding ReEncodeFont}17
119.552 /Times-Bold rf
%DVIPSBitmapFont: Fd cmmi10 10 2
/Fd 2 60 df<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213
C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I
E
%EndDVIPSBitmapFont
/Ff 12[42 62[28 28[83 28[37 42 1[60 1[42 23 32 28 1[42
42 42 65 23 42 23 23 42 42 1[37 42 37 42 37 9[78 1[60
51 3[46 1[60 74 1[60 2[60 60 2[60 55 8[23 4[42 2[42 42
42 1[21 28 21 2[28 28 31[28 23 51 3[46 28 1[{
TeXBase1Encoding ReEncodeFont}51 83.022 /Times-Roman
rf /Fg 134[37 1[55 2[23 2[42 1[42 42 1[23 37 2[42 25[55
69 24[42 1[42 42 42 1[21 46[{TeXBase1Encoding ReEncodeFont}16
83.022 /Times-Italic rf /Fh 138[46 28 1[37 16[42 23[32
73[{TeXBase1Encoding ReEncodeFont}5 83.022 /Times-Bold
rf /Fi 136[100 2[43 1[50 2[79 79 2[72 1[36 3[72 79 72
1[72 6[79 5[79 14[86 10[43 58[{TeXBase1Encoding ReEncodeFont}15
129.115 /Helvetica-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 0 401 a Fi(Zadanie:)43 b(E)0 584 y(T)-10 b(rik)n(ontener)m(o)n
(wiec)2970 684 y @beginspecial 14 @llx 14 @lly 18 @urx
17 @ury 755 @rwi @setspecial
%%BeginDocument: empty.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: GIMP PostScript file plugin V 1.11 by Peter Kirchgessner
%%Title: /home/tomek/work/boi-gw/zadania/zad1/empty.eps
%%CreationDate: Thu Jun  7 22:55:53 2001
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 14 14 18 17
%%EndComments
%%BeginProlog
% Use own dictionary to avoid conflicts
10 dict begin
%%EndProlog
%%Page: 1 1
% Translate for offset
14.173228 14.173228 translate
% Translate to begin of first scanline
0.000000 1.889764 translate
2.834646 -1.889764 scale
% Image geometry
6 4 8
% Transformation matrix
[ 6 0 0 4 0 0 ]
% Strings to hold RGB-samples per scanline
/rstr 6 string def
/gstr 6 string def
/bstr 6 string def
{currentfile /ASCII85Decode filter /RunLengthDecode filter rstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter gstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter bstr readstring pop}
true 3
%%BeginData:           95 ASCII Bytes
colorimage
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
%%EndData
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial 0 710 3600 4 v 21 815 a Fh(II)21 b(tura)2967
b Fg(2002.04.11)0 1008 y Ff(K)m(opalnia)16 b(Glinek)g(HyperMarsja)1009
1007 y(\264)1002 1008 y(nskich)f(\(KGHyM\))g(wydobyw)o(a)g(\(na)i
(Marsie\))g(czerw)o(one)e(glinki)h(w)5 b(\010)-33 b(e)o(glo)n(w)o
(o-krzemo)n(we)0 1108 y(i)23 b(prasuje)f(je)g(w)h(p\007yty)f(wygodne)e
(w)j(transporcie.)30 b(Ka)5 b(\001)-33 b(zda)22 b(p\007yta)g(ma)g
(standardo)n(w)14 b(\010)-43 b(a)20 b(szerok)o(o)2748
1107 y(\264)2746 1108 y(s)2783 1107 y(\264)2778 1108
y(c)i(i)h(grubo)3081 1107 y(\264)3079 1108 y(s)3116 1107
y(\264)3111 1108 y(c,)e(ale)i(poszcze-)0 1208 y(g\363lne)d(p\007yty)g
(mog)15 b(\010)-43 b(a)19 b(si)5 b(\010)-33 b(e)22 b(r\363)5
b(\001)-33 b(zni)894 1207 y(\264)889 1208 y(c)19 b(wysok)o(o)1206
1207 y(\264)1204 1208 y(sci)d(\010)-44 b(a)20 b(i)h(jak)o(o)1542
1207 y(\264)1540 1208 y(sci)c(\010)-45 b(a)21 b(materia\007u.)k(W)-6
b(yr\363)5 b(\001)-33 b(znia)20 b(si)5 b(\010)-33 b(e)22
b(1000)d(klas)i(jak)o(o)2995 1207 y(\264)2993 1208 y(sci)g(glinek)e(i)j
(produ-)0 1307 y(kuje)g(si)5 b(\010)-33 b(e)24 b(p\007yty)e(o)h(wysok)o
(o)802 1306 y(\264)800 1307 y(sciach)f(1)p Fd(;)9 b Ff(2)p
Fd(;)g(:)g(:)g(:)g(;)g Ff(1)g(000)g(000mm.)30 b(Cena)23
b(p\007yty)f(zale)5 b(\001)-33 b(zy)23 b Fg(tylk)o(o)g
Ff(od)g(jak)o(o)2859 1306 y(\264)2857 1307 y(sci)f(materia\007u)h(-)g
(nie)g(jest)0 1407 y(natomiast)d(w)o(a)5 b(\001)-33 b(zna)20
b(jej)g(wysok)o(o)940 1406 y(\264)938 1407 y(s)975 1406
y(\264)970 1407 y(c.)k(P\007yta)d(z)g(materia\007u)e(klasy)h
Fg(q)g Ff(k)o(osztuje)g Fg(q)g Ff(galaktar\363w)-5 b(.)855
2220 y @beginspecial 0 @llx 0 @lly 327 @urx 123 @ury
2267 @rwi @setspecial
%%BeginDocument: tri_rys.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tri_rys.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Thu Apr  4 13:17:02 2002
%%For: pka@swiatowit (Przemyslawa Kanarek)
%%BoundingBox: 0 0 327 123
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 123 moveto 0 0 lineto 327 0 lineto 327 123 lineto closepath clip newpath
-70.7 264.8 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
60.000 slw
n 1650 3900 m
 1725 3900 l gs col0 s gr 
% Polyline
n 1800 3900 m
 1875 3900 l gs col0 s gr 
% Polyline
n 1950 3900 m
 2025 3900 l gs col0 s gr 
% Polyline
n 2100 3900 m
 2175 3900 l gs col0 s gr 
% Polyline
n 2250 3900 m
 2325 3900 l gs col0 s gr 
% Polyline
n 2400 3900 m
 2475 3900 l gs col0 s gr 
% Polyline
n 2550 3900 m
 2625 3900 l gs col0 s gr 
% Polyline
n 2700 3900 m
 2775 3900 l gs col0 s gr 
% Polyline
n 2850 3900 m
 2925 3900 l gs col0 s gr 
% Polyline
n 3000 3900 m
 3075 3900 l gs col0 s gr 
% Polyline
n 3150 3900 m
 3225 3900 l gs col0 s gr 
% Polyline
n 3300 3900 m
 3375 3900 l gs col0 s gr 
% Polyline
n 3450 3900 m
 3525 3900 l gs col0 s gr 
% Polyline
n 3600 3900 m
 3675 3900 l gs col0 s gr 
% Polyline
n 3750 3900 m
 3825 3900 l gs col0 s gr 
% Polyline
15.000 slw
n 1200 3900 m 3900 2700 l 4200 2700 l 4200 2400 l 5100 2400 l 5100 2700 l
 5700 2700 l 5700 2400 l 6000 2400 l 6000 3600 l 6600 3600 l
 6600 3900 l 5400 3900 l 5400 3375 l 3900 3375 l 3900 3900 l

 cp gs col0 s gr 
% Polyline
7.500 slw
n 3900 3000 m 4575 2700 l 5025 2700 l 5025 2475 l 4275 2475 l 4275 2775 l
 3900 2775 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 260.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3900 3300 m 4500 3000 l 5100 3000 l 5475 3300 l 4500 3300 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 260.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5400 2775 m 5925 3300 l 5925 2475 l 5775 2475 l 5775 2775 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 360.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
60.000 slw
n 1350 3900 m
 1425 3900 l gs col0 s gr 
% Polyline
n 1500 3900 m
 1575 3900 l gs col0 s gr 
% Polyline
7.500 slw
n 1950 3600 m 2025 3600 l 2025 3900 l 1950 3900 l
 cp gs col0 s gr 
% Polyline
n 2700 3600 m 2775 3600 l 2775 3900 l 2700 3900 l
 cp gs col0 s gr 
% Polyline
n 2550 3300 m 2625 3300 l 2625 3900 l 2550 3900 l
 cp gs col0 s gr 
% Polyline
n 3450 3000 m 3525 3000 l 3525 3900 l 3450 3900 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1579 3941 m 1545 3991 l 1643 4056 l 1585 3982 l 1676 4006 l cp
eoclip
n 1800 4125 m
 1575 3975 l gs col0 s gr gr

% arrowhead
n 1676 4006 m 1585 3982 l 1643 4056 l 1684 4048 l 1676 4006 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1981 3985 m 1939 3943 l 1857 4025 l 1942 3983 l 1899 4067 l cp
eoclip
n 1800 4125 m
 1950 3975 l gs col0 s gr gr

% arrowhead
n 1899 4067 m 1942 3983 l 1857 4025 l 1857 4067 l 1899 4067 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2795 3648 m 2741 3675 l 2793 3779 l 2780 3686 l 2847 3753 l cp
eoclip
n 3000 4125 m
 2775 3675 l gs col0 s gr gr

% arrowhead
n 2847 3753 m 2780 3686 l 2793 3779 l 2833 3793 l 2847 3753 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3408 3605 m 3359 3570 l 3291 3665 l 3368 3610 l 3340 3700 l cp
eoclip
n 3000 4125 m
 3375 3600 l gs col0 s gr gr

% arrowhead
n 3340 3700 m 3368 3610 l 3291 3665 l 3298 3707 l 3340 3700 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 240.00 scf sf
1350 3150 m
gs 1 -1 sc (Ladownia) col0 sh gr
/Times-Roman ff 240.00 scf sf
1500 4350 m
gs 1 -1 sc (uchwyty) col0 sh gr
/Times-Roman ff 240.00 scf sf
2850 4350 m
gs 1 -1 sc (plyty) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 125 2396 a(T)m(rik)o(ontenero)n(wiec)28
b(galaktyczn)o(y)-5 b(,)32 b(to)g(rodzaj)f(statku)g(k)o(osmiczne)o(go,)
i(kt\363ry)d(s\007u)5 b(\001)-33 b(zy)32 b(do)g(prze)n(w)o(ozu)e
(p\007yt)h(produk)o(o-)0 2496 y(w)o(an)o(ych)e(przez)g(KGHyM.)g
(\006ado)n(wnia)g(te)o(go)g(statku)h(to)g(hala,)i(w)e(kt\363rej)f(w)i
(pod\007odze)c(zamonto)n(w)o(ano)h(r\363wnole)o(gle)g
Fg(M)0 2595 y Ff(pro)n(w)o(adnic)20 b(na)j(p\007yty)e(-)i(w)f(ka)5
b(\001)-33 b(zdej)22 b(pro)n(w)o(adnic)o(y)e(mo)5 b(\001)-33
b(zna)21 b(umie)1862 2594 y(\264)1860 2595 y(sci)1957
2594 y(\264)1952 2595 y(c)h(tylk)o(o)g(jedna)f(p\007yt)5
b(\010)-33 b(e.)31 b(\006ado)n(wnia)21 b(ma)h(spadzisty)g(strop)0
2695 y(\(patrz)h(rysunek\),)g(tzn.)37 b(jej)25 b(su\002t)f(w)h(jedn)o
(ym)d(k)o(o)1437 2694 y(\264)1430 2695 y(ncu)h(jest)i(na)f(wysok)o(o)
2078 2694 y(\264)2076 2695 y(sci)g(1)g(mm,)g(a)h(w)f(drugim)f(na)h
(wysok)o(o)3208 2694 y(\264)3206 2695 y(sci)f Fg(M)29
b Ff(mm)23 b(-)0 2794 y(oznacza)18 b(to,)24 b(\001)-33
b(ze)19 b(strop)g(nad)f(pro)n(w)o(adnic)d(\010)-43 b(a)17
b(o)i(numerze)e Fg(n)i Ff(jest)h(na)f(wysok)o(o)2135
2793 y(\264)2133 2794 y(sci)f Fg(n)h Ff(milimetr\363w)f(i)h(mo)5
b(\001)-33 b(zna)18 b(w)h(niej)g(umieszcza)3569 2793
y(\264)3564 2794 y(c)0 2894 y(tylk)o(o)h(p\007yty)f(o)h(wysok)o(o)705
2893 y(\264)703 2894 y(sci)g(mniejszej)g(lub)g(r\363wnej)f(tej)i(w)o
(arto)1827 2893 y(\264)1825 2894 y(sci.)125 2994 y(Na)h(ha\007dach)e
(KGHyM)i(le)5 b(\001)-33 b(z)17 b(\010)-45 b(a)22 b(p\007yty)f(w)h
(oczekiw)o(aniu)e(na)i(transport,)f(a)h(do)f(doku)g(przybi\007)f
(w\007a)2886 2993 y(\264)2884 2994 y(snie)i(trik)o(ontenero)n(wiec)0
3093 y(i)k(je)o(go)e(za\007oga)g(rozpocz)5 b(\010)-33
b(e\007a)24 b(za\007adunek)f(statku.)40 b(W)m(iadomo,)30
b(\001)-33 b(ze)25 b(kapitano)n(wi)f(zale)5 b(\001)-33
b(zy)24 b(na)i(zabraniu)d(\007adunku)g(o)j(jak)f(naj-)0
3193 y(wi)5 b(\010)-33 b(ekszej)27 b(sumarycznej)d(w)o(arto)955
3192 y(\264)953 3193 y(sci,)k(ale)f(jest)h(ograniczon)o(y)23
b(rozmiarami)i(\007ado)n(wni)h(\(niestety)g(nie)h(mo)5
b(\001)-33 b(ze)26 b(przyci)16 b(\010)-44 b(a)3400 3192
y(\264)3395 3193 y(c)25 b(zbyt)0 3293 y(du)5 b(\001)-33
b(zych)23 b(p\007yt,)h(gdy)5 b(\001)-33 b(z)24 b(po)g(spraso)n(w)o
(aniu)e(p\007yty)i(nie)g(poddaj)16 b(\010)-44 b(a)23
b(si)5 b(\010)-33 b(e)25 b(\007atw)o(o)g(obr\363bce\).)34
b(W)m(iadomo)23 b(tak)5 b(\001)-33 b(ze,)30 b(\001)-33
b(ze)25 b(do)3216 3292 y(\264)3214 3293 y(swiadczona)0
3392 y(za\007oga)g(statku)g(wybierze)g(\007adunek)f(optymalnie)g
(zgodnie)h(z)h(zaleceniami)f(kapitana.)41 b(Przedsta)o(wiciel)25
b(KGHyM)h(musi)0 3492 y(zdec)o(ydo)n(w)o(a)377 3491 y(\264)372
3492 y(c,)18 b(ile)i(ma)h(zap\007aci)915 3491 y(\264)910
3492 y(c)e(za)i(\007adunek)d(kapitan)i(statku.)0 3771
y Fc(Zadanie)0 3956 y Ff(Napisz)g(program)e(kt\363ry:)124
4117 y Fb(\017)42 b Ff(wczytuje)19 b(rozmiar)g(\007ado)n(wni)g(i)i
(rozmiary)d(p\007yt)i(le)5 b(\001)-33 b(z)18 b(\010)-46
b(ac)o(ych)19 b(na)h(ha\007dzie,)124 4280 y Fb(\017)42
b Ff(oblicza,)19 b(jaka)h(jest)h(maksymalna)d(w)o(arto)1415
4279 y(\264)1413 4280 y(s)1450 4279 y(\264)1445 4280
y(c)i(\007adunku,)e(kt\363ry)h(mo)5 b(\001)-33 b(zna)20
b(zabra)2436 4279 y(\264)2431 4280 y(c)f(na)h(statek,)124
4443 y Fb(\017)42 b Ff(wypisuje)19 b(maksymaln)c(\010)-43
b(a)18 b(w)o(arto)1159 4442 y(\264)1157 4443 y(s)1194
4442 y(\264)1189 4443 y(c)j(\007adunku.)0 4722 y Fc(W)-8
b(ej)208 4721 y(\264)205 4722 y(scie)0 4908 y Ff(W)16
b(pierwszym)e(wierszu)i(wej)871 4907 y(\264)869 4908
y(scia)f(podane)f(s)k(\010)-46 b(a)16 b(liczby)f(naturalne)f
Fg(M)19 b Ff(i)d Fg(N)21 b Ff(oddzielone)14 b(spacj)j(\010)-45
b(a)15 b(\(1)e Fb(\024)g Fg(M)18 b Fb(\024)13 b Ff(500)c(000,)14
b(0)g Fb(\024)f Fg(N)19 b Fb(\024)0 5008 y Ff(1)9 b(000)g(000\))23
b(\227)k Fg(M)j Ff(oznacza)25 b(d\007ugo)1059 5007 y(\264)1057
5008 y(s)1094 5007 y(\264)1089 5008 y(c,)h(maksymaln)15
b(\010)-43 b(a)24 b(wysok)o(o)1880 5007 y(\264)1878 5008
y(s)1915 5007 y(\264)1910 5008 y(c)h(i)i(jednocze)2321
5007 y(\264)2319 5008 y(snie)d(liczb)5 b(\010)-33 b(e)26
b(pro)n(w)o(adnic)e(w)i(\007ado)n(wni,)g(a)h Fg(N)0 5107
y Ff(jest)19 b(liczb)e(\010)-45 b(a)18 b(p\007yt)h(na)f(ha\007dzie.)23
b(W)d(k)o(olejn)o(ych)c Fg(N)24 b Ff(wierszach)18 b(znajduj)e(\010)-44
b(a)17 b(si)5 b(\010)-33 b(e)19 b(opisy)f(p\007yt)g(z)h(ha\007dy)f
(\227)h(po)e(jedn)o(ym)g(w)i(wierszu.)1779 5356 y(1)p
eop
%%Page: 2 2
2 1 bop 0 390 a Ff(Ka)5 b(\001)-33 b(zdy)27 b(opis)h(p\007yty)f(to)h
(dwie)g(liczby)f(naturalne)g Fg(w)i Ff(i)f Fg(h)g Ff(oddzielone)e
(spacj)17 b(\010)-45 b(a)28 b(\(1)22 b Fb(\024)g Fg(w)h
Fb(\024)f Ff(1)9 b(000)p Fd(;)g Ff(1)21 b Fb(\024)h Fg(h)h
Fb(\024)f Ff(1)9 b(000)g(000\))25 b(\227)0 490 y(pierwsza)15
b(liczba)g(oznacza)f(klas)5 b(\010)-33 b(e)16 b(jak)o(o)1140
489 y(\264)1138 490 y(sci)f(tw)o(orzyw)o(a)g(p\007yty)-5
b(,)15 b(a)h(druga)d(wysok)o(o)2308 489 y(\264)2306 490
y(s)2343 489 y(\264)2338 490 y(c)i(p\007yty)f(w)i(milimetrach.)22
b(Uw)o(aga:)h(W)3459 489 y(\264)3457 490 y(sr\363d)0
589 y(p\007yt)30 b(na)h(ha\007dzie)e(mog)16 b(\010)-44
b(a)30 b(znajdo)n(w)o(a)1078 588 y(\264)1073 589 y(c)f(si)5
b(\010)-33 b(e)31 b(takie,)i(kt\363rych)28 b(wysok)o(o)2023
588 y(\264)2021 589 y(sci)i(s)18 b(\010)-46 b(a)31 b(wi)5
b(\010)-33 b(eksze)31 b(od)f(maksymalnej)f(dopuszczalnej)0
689 y(wysok)o(o)261 688 y(\264)259 689 y(sci)19 b(\007ado)n(wni)h
(statku.)0 969 y Fc(W)-7 b(yj)216 968 y(\264)213 969
y(scie)0 1155 y Ff(W)21 b(pierwszym)e(i)i(jedyn)o(ym)d(wierszu)i
(wyniku)f(nale)5 b(\001)-33 b(zy)19 b(poda)1792 1154
y(\264)1787 1155 y(c)g(jedn)e(\010)-45 b(a)20 b(liczb)5
b(\010)-33 b(e)20 b(\227)h(w)o(arto)2558 1154 y(\264)2556
1155 y(s)2593 1154 y(\264)2588 1155 y(c)f(optymalne)o(go)d(\007adunku.)
0 1435 y Fc(Przyk\007ad)0 1621 y Ff(Dla)k(dan)o(ych)d(wej)522
1620 y(\264)520 1621 y(scio)n(wych:)0 1720 y Fa(10)43
b(5)0 1820 y(2)g(1)0 1919 y(3)g(2)0 2019 y(5)g(2)0 2119
y(2)g(10)0 2218 y(3)g(10)0 2318 y Ff(popra)o(wn)15 b(\010)-43
b(a)18 b(odpo)n(wiedzi)d(\010)-43 b(a)18 b(jest:)0 2418
y Fa(13)1779 5356 y Ff(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

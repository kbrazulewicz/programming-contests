%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: b.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica-Bold Times-Bold Times-Italic Times-Roman
%%+ Symbol Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips b.dvi -o b.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.04.09:2338
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (b.dvi)
@start /Fa 202[42 42 42 42 42 42 48[{
.85 ExtendFont TeXBase1Encoding ReEncodeFont}6 83.022
/Courier rf /Fb 75[40 57[53 60 5[47 53 3[66 2[66 40 33
3[53 66 53 1[60 6[80 2[120 6[73 72[33 7[{TeXBase1Encoding ReEncodeFont}
17 119.552 /Times-Bold rf
%DVIPSBitmapFont: Fc cmsy10 10 2
/Fc 2 21 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D<EF0180EF07C0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0
ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FC
EA3FF0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE9038
00FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0F
F8EE03FE933800FF80EF3FC0170FEF038094C7FCAE007FB81280B912C0A26C1780324479
B441>20 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 10 3
/Fd 3 61 df<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213
C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EF
0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0ED
FF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA
0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03
FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3F
E0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>I
E
%EndDVIPSBitmapFont
/Ff 12[42 62[28 57[37 42 1[60 1[42 23 32 28 1[42 42 42
65 23 42 23 23 42 42 1[37 42 37 42 37 9[78 7[60 60 1[51
60 6[60 9[23 7[42 42 42 1[21 28 21 35[28 23 5[28 1[{
TeXBase1Encoding ReEncodeFont}40 83.022 /Times-Roman
rf /Fg 156[37 42 42 14[51 3[55 25[42 1[42 42 42 1[21
46[{TeXBase1Encoding ReEncodeFont}10 83.022 /Times-Italic
rf /Fh 138[46 28 1[37 16[42 23[32 73[{TeXBase1Encoding ReEncodeFont}5
83.022 /Times-Bold rf /Fi 139[43 5[79 2[72 1[36 3[72
79 2[72 6[79 11[93 1[79 9[93 7[43 58[{TeXBase1Encoding ReEncodeFont}12
129.115 /Helvetica-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 0 401 a Fi(Zadanie:)43 b(B)0 584 y(LinkNet)2970
684 y @beginspecial 14 @llx 14 @lly 18 @urx 17 @ury 755
@rwi @setspecial
%%BeginDocument: empty.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: GIMP PostScript file plugin V 1.11 by Peter Kirchgessner
%%Title: /home/tomek/work/boi-gw/zadania/zad1/empty.eps
%%CreationDate: Thu Jun  7 22:55:53 2001
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 14 14 18 17
%%EndComments
%%BeginProlog
% Use own dictionary to avoid conflicts
10 dict begin
%%EndProlog
%%Page: 1 1
% Translate for offset
14.173228 14.173228 translate
% Translate to begin of first scanline
0.000000 1.889764 translate
2.834646 -1.889764 scale
% Image geometry
6 4 8
% Transformation matrix
[ 6 0 0 4 0 0 ]
% Strings to hold RGB-samples per scanline
/rstr 6 string def
/gstr 6 string def
/bstr 6 string def
{currentfile /ASCII85Decode filter /RunLengthDecode filter rstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter gstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter bstr readstring pop}
true 3
%%BeginData:           95 ASCII Bytes
colorimage
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
qu;0~>
%%EndData
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial 0 712 3600 4 v 21 819 a Fh(I)21 b(tura)2999
b Fg(2001.04.10)125 1018 y Ff(W)19 b(sieci)h(LinkNet)e(k)o(omputery)e
(s)i(\010)-46 b(a)19 b(przy\007)d(\010)-44 b(aczone)17
b(do)h(linii)h(k)o(omunikac)o(yjnej)c(w)k(spos\363b)f(przedsta)o(wion)o
(y)e(na)j(rysunku.)0 1118 y(Dost)5 b(\010)-33 b(epne)21
b(punkty)f(przy\007)c(\010)-44 b(acze)916 1117 y(\264)909
1118 y(n)20 b(s)e(\010)-46 b(a)23 b(ponumero)n(w)o(ane)c(k)o(olejno)h
(0)p Fd(;)9 b Ff(1)g Fd(:)g(:)g(:)h Fg(R)p Ff(.)30 b(Do)22
b(jedne)o(go)e(punktu)h(mo)5 b(\001)-33 b(ze)21 b(by)3142
1117 y(\264)3137 1118 y(c)h(przy\007)16 b(\010)-44 b(aczon)o(y)0
1217 y(tylk)o(o)19 b(jeden)g(k)o(omputer)-5 b(.)23 b(Ka)5
b(\001)-33 b(zdy)19 b(z)g(k)o(omputer\363w)e(mo)5 b(\001)-33
b(ze)19 b(by)1770 1216 y(\264)1765 1217 y(c)g(przy\007)d(\010)-44
b(aczon)o(y)17 b(do)i(sieci)h(tylk)o(o)f(w)h(jedn)o(ym)e(punkcie.)23
b(K)m(omu-)0 1317 y(nikacja)d(w)g(sieci)h(jest)g(synchroniczna.)855
2160 y @beginspecial 0 @llx 0 @lly 407 @urx 158 @ury
2267 @rwi @setspecial
%%BeginDocument: link_rys.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: link_rys.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Thu Apr  4 13:17:15 2002
%%For: pka@swiatowit (Przemyslawa Kanarek)
%%BoundingBox: 0 0 407 158
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 158 moveto 0 0 lineto 407 0 lineto 407 158 lineto closepath clip newpath
-67.0 219.8 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
7.500 slw
% Ellipse
n 7200 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 7800 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Polyline
n 6900 2100 m
 7800 2100 l gs col0 s gr 
/Times-Roman-iso ff 240.00 scf sf
7800 2475 m
gs 1 -1 sc (R) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7200 2475 m
gs 1 -1 sc (R-1) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 5775 1425 m 6300 1425 l 6300 1875 l 5775 1875 l
 cp gs col0 s gr 
% Polyline
n 5925 1875 m 5850 1950 l 6225 1950 l
 6150 1875 l gs col0 s gr 
% Polyline
n 5955 1500 m 5850 1500 5850 1695 105 arcto 4 {pop} repeat
  5850 1800 6120 1800 105 arcto 4 {pop} repeat
  6225 1800 6225 1605 105 arcto 4 {pop} repeat
  6225 1500 5955 1500 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 390.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
2 slj
n 5850 1875 m 5850 1876 l 5847 1883 l 5841 1896 l 5833 1916 l 5826 1936 l
 5820 1955 l 5817 1970 l 5817 1983 l 5820 1992 l 5825 2000 l
 5832 2005 l 5841 2010 l 5853 2013 l 5869 2016 l 5888 2019 l
 5911 2021 l 5935 2022 l 5960 2024 l 5980 2024 l 5993 2025 l
 5999 2025 l
 6000 2025 l gs col0 s gr 
% Polyline
0 slj
n 4575 1425 m 5100 1425 l 5100 1875 l 4575 1875 l
 cp gs col0 s gr 
% Polyline
n 4725 1875 m 4650 1950 l 5025 1950 l
 4950 1875 l gs col0 s gr 
% Polyline
n 4755 1500 m 4650 1500 4650 1695 105 arcto 4 {pop} repeat
  4650 1800 4920 1800 105 arcto 4 {pop} repeat
  5025 1800 5025 1605 105 arcto 4 {pop} repeat
  5025 1500 4755 1500 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 310.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
2 slj
n 4650 1875 m 4650 1876 l 4647 1883 l 4641 1896 l 4633 1916 l 4626 1936 l
 4620 1955 l 4617 1970 l 4617 1983 l 4620 1992 l 4625 2000 l
 4632 2005 l 4641 2010 l 4653 2013 l 4669 2016 l 4688 2019 l
 4711 2021 l 4735 2022 l 4760 2024 l 4780 2024 l 4793 2025 l
 4799 2025 l
 4800 2025 l gs col0 s gr 
% Ellipse
n 1200 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 1800 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 3000 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 3600 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 4200 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 5400 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 4800 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 6000 2100 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Polyline
0 slj
n 1200 2100 m
 2100 2100 l gs col0 s gr 
% Polyline
n 2550 2100 m
 6450 2100 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 2100 2100 m
 2550 2100 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6450 2100 m
 6975 2100 l gs col0 s gr  [] 0 sd
% Polyline
n 2775 2700 m 3300 2700 l 3300 3150 l 2775 3150 l
 cp gs col0 s gr 
% Polyline
n 2925 3150 m 2850 3225 l 3225 3225 l
 3150 3150 l gs col0 s gr 
% Polyline
n 2955 2775 m 2850 2775 2850 2970 105 arcto 4 {pop} repeat
  2850 3075 3120 3075 105 arcto 4 {pop} repeat
  3225 3075 3225 2880 105 arcto 4 {pop} repeat
  3225 2775 2955 2775 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 190.00 185.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3900 2700 m 4425 2700 l 4425 3150 l 3900 3150 l
 cp gs col0 s gr 
% Polyline
n 4050 3150 m 3975 3225 l 4350 3225 l
 4275 3150 l gs col0 s gr 
% Polyline
n 4080 2775 m 3975 2775 3975 2970 105 arcto 4 {pop} repeat
  3975 3075 4245 3075 105 arcto 4 {pop} repeat
  4350 3075 4350 2880 105 arcto 4 {pop} repeat
  4350 2775 4080 2775 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 265.00 185.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
2 slj
n 2850 3150 m 2849 3150 l 2846 3151 l 2836 3152 l 2820 3153 l 2797 3156 l
 2769 3158 l 2736 3160 l 2702 3162 l 2669 3163 l 2637 3163 l
 2608 3162 l 2583 3160 l 2560 3156 l 2541 3151 l 2524 3144 l
 2510 3135 l 2498 3125 l 2488 3113 l 2479 3100 l 2473 3085 l
 2467 3069 l 2462 3052 l 2458 3032 l 2455 3012 l 2454 2989 l
 2453 2966 l 2453 2942 l 2455 2916 l 2457 2891 l 2461 2865 l
 2465 2839 l 2470 2813 l 2476 2788 l 2482 2764 l 2489 2740 l
 2496 2718 l 2504 2696 l 2513 2675 l 2521 2655 l 2531 2635 l
 2541 2615 l 2552 2596 l 2563 2577 l 2575 2557 l 2588 2539 l
 2601 2520 l 2615 2502 l 2628 2484 l 2643 2466 l 2657 2449 l
 2671 2433 l 2685 2418 l 2699 2403 l 2712 2389 l 2725 2375 l
 2738 2362 l 2750 2350 l 2763 2338 l 2776 2324 l 2789 2311 l
 2802 2298 l 2816 2284 l 2831 2269 l 2847 2253 l 2863 2237 l
 2881 2219 l 2900 2200 l 2919 2181 l 2938 2162 l 2956 2144 l
 2972 2128 l 2984 2116 l 2993 2107 l 2998 2102 l
 3000 2100 l gs col0 s gr 
% Polyline
n 4021 3156 m 4020 3156 l 4017 3157 l 4007 3158 l 3991 3159 l 3968 3162 l
 3940 3164 l 3907 3166 l 3873 3168 l 3840 3169 l 3808 3169 l
 3779 3168 l 3754 3166 l 3731 3162 l 3712 3157 l 3695 3150 l
 3681 3141 l 3669 3131 l 3659 3119 l 3650 3106 l 3644 3091 l
 3638 3075 l 3633 3058 l 3629 3038 l 3626 3018 l 3625 2995 l
 3624 2972 l 3624 2948 l 3626 2922 l 3628 2897 l 3632 2871 l
 3636 2845 l 3641 2819 l 3647 2794 l 3653 2770 l 3660 2746 l
 3667 2724 l 3675 2702 l 3684 2681 l 3692 2661 l 3702 2641 l
 3712 2621 l 3723 2602 l 3734 2583 l 3746 2563 l 3759 2545 l
 3772 2526 l 3786 2508 l 3799 2490 l 3814 2472 l 3828 2455 l
 3842 2439 l 3856 2424 l 3870 2409 l 3883 2395 l 3896 2381 l
 3909 2368 l 3921 2356 l 3934 2344 l 3947 2330 l 3960 2317 l
 3973 2304 l 3987 2290 l 4002 2275 l 4018 2259 l 4034 2243 l
 4052 2225 l 4071 2206 l 4090 2187 l 4109 2168 l 4127 2150 l
 4143 2134 l 4155 2122 l 4164 2113 l 4169 2108 l
 4171 2106 l gs col0 s gr 
/Times-Roman-iso ff 240.00 scf sf
1800 2475 m
gs 1 -1 sc (1) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1200 2475 m
gs 1 -1 sc (0) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
3000 2475 m
gs 1 -1 sc (a) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
3600 2475 m
gs 1 -1 sc (a+1) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
4200 2475 m
gs 1 -1 sc (a+2) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
4800 2475 m
gs 1 -1 sc (a+3) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
5400 2475 m
gs 1 -1 sc (a+4) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
6000 2475 m
gs 1 -1 sc (a+5) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
2700 3600 m
gs 1 -1 sc (transmisja z a do a+2) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
4500 1200 m
gs 1 -1 sc (transmisja z a+3 do a+5) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 125 2343 a(W)28 b(dan)o(ym)d(takcie)j(k)o(omputery)c
(przy\007)16 b(\010)-44 b(aczone)25 b(do)i(punkt\363w)f(0)c
Fc(\024)g Fg(a)f Fd(<)h Fg(b)g Fc(\024)g Fg(R)28 b Ff(mog)16
b(\010)-44 b(a)26 b(dok)o(ona)2949 2342 y(\264)2944 2343
y(c)f(transmisji)i(dan)o(ych)0 2442 y(tylk)o(o)17 b(wtedy)-5
b(,)17 b(gdy)22 b(\001)-33 b(zaden)16 b(k)o(omputer)g(przy\007)g(\010)
-44 b(aczon)o(y)15 b(do)i(\007)g(\010)-45 b(acza)17 b(o)h(numerze)e
Fg(c)p Fd(;)9 b Fg(a)16 b Fd(<)f Fg(c)h Fd(<)g Fg(b)h
Ff(nie)h(bierze)f(udzia\007u)f(w)i(transmisji)0 2542
y(dan)o(ych)26 b(z)i(jakimk)o(ol)o(wiek)f(inn)o(ym)f(k)o(omputerem.)46
b(W)28 b(jedn)o(ym)f(takcie)g(k)o(omputer)f(mo)5 b(\001)-33
b(ze)28 b(bra)2820 2541 y(\264)2815 2542 y(c)f(udzia\007)g(tylk)o(o)h
(w)g(jednej)0 2641 y(tranmisji.)0 2922 y Fb(Zadanie)0
3107 y Ff(Napisz)20 b(program)e(kt\363ry:)124 3273 y
Fc(\017)42 b Ff(wczytuje)19 b(opisy)h(transmisji,)g(kt\363re)f(trzeba)h
(zrealizo)n(w)o(a)1876 3272 y(\264)1871 3273 y(c,)124
3439 y Fc(\017)42 b Ff(oblicza)19 b(jaka)h(jest)h(minimalna)e(liczba)h
(takt\363w)g(wystarczaj)c(\010)-44 b(ac)o(ych)18 b(do)i(zrealizo)n(w)o
(ania)f(transmisji,)124 3605 y Fc(\017)42 b Ff(wypisuje)19
b(obliczon)c(\010)-43 b(a)19 b(liczb)5 b(\010)-33 b(e.)0
3886 y Fb(W)-8 b(ej)208 3885 y(\264)205 3886 y(scie)0
4071 y Ff(W)23 b(pierwszym)e(wierszu)h(dan)o(ych)e(podana)h(jest)i
(liczba)f(transmisji)g Fg(N)j Ff(:)20 b(0)f Fc(\024)g
Fg(N)25 b Fc(\024)19 b Ff(100000.)29 b(W)23 b(k)o(olejn)o(ych)d
Fg(N)28 b Ff(wierszach)0 4171 y(podane)19 b(s)f(\010)-46
b(a)21 b(opisy)f(transmisji)g(-)h(po)f(jedn)o(ym)e(w)j(wierszu.)26
b(Opis)20 b(ka)5 b(\001)-33 b(zdej)20 b(transmisji)g(sk\007ada)g(si)5
b(\010)-33 b(e)22 b(z)e(dw\363ch)g(liczb)g Fg(a)p Fd(;)9
b Fg(b)18 b Ff(:)g(0)g Fc(\024)0 4270 y Fg(a)g Fd(<)g
Fg(b)g Fc(\024)g Ff(1000000000)e(oznaczaj)g(\010)-44
b(ac)o(ych)18 b(numery)g(punkt\363w)-5 b(,)18 b(pomi)5
b(\010)-33 b(edzy)18 b(kt\363rymi)h(ma)h(by)2670 4269
y(\264)2665 4270 y(c)g(transmisja)g(dan)o(ych.)j(Liczby)0
4370 y Fg(a)d Ff(i)h Fg(b)f Ff(s)e(\010)-46 b(a)21 b(oddzielone)d
(spacj)f(\010)-45 b(a.)0 4650 y Fb(W)-7 b(yj)216 4649
y(\264)213 4650 y(scie)0 4836 y Ff(W)19 b(pierwszym)e(i)i(jedyn)o(ym)c
(wierszu)j(wyniku)f(po)n(winna)f(by)1765 4835 y(\264)1760
4836 y(c)i(podana)e(jedna)i(liczba:)24 b(minimalna)16
b(liczba)i(takt\363w)g(wystar)n(-)0 4935 y(czj)f(\010)-45
b(ac)o(ych)19 b(do)h(zrealizo)n(w)o(ania)f(wszystkich)g(transmisji)i
(opisan)o(ych)d(w)i(dan)o(ych.)1779 5356 y(1)p eop
%%Page: 2 2
2 1 bop 0 390 a Fb(Przyk\007ad)0 576 y Ff(Dla)21 b(dan)o(ych)d(wej)522
575 y(\264)520 576 y(scio)n(wych:)0 675 y Fa(4)0 775
y(10)43 b(20)0 875 y(3)g(10)0 974 y(5)g(35)0 1074 y(20)g(50)0
1174 y Ff(popra)o(wn)15 b(\010)-43 b(a)18 b(odpo)n(wiedzi)d(\010)-43
b(a)18 b(jest:)0 1273 y Fa(3)1779 5356 y Ff(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
